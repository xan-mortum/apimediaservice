// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "swagger": "2.0",
  "info": {
    "title": "apimediaservice",
    "version": "1.0.0"
  },
  "paths": {
    "/token": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "token",
        "responses": {
          "200": {
            "description": "get token",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/files": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "files",
        "parameters": [
          {
            "type": "string",
            "description": "User's token",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "file list",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/resize": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "resize",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "upfile",
            "in": "formData"
          },
          {
            "type": "integer",
            "description": "Param of file resize.",
            "name": "resize",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "User's token",
            "name": "token",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "resize result",
            "schema": {
              "$ref": "#/definitions/Resize"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/resize_exists": {
      "post": {
        "produces": [
          "application/json"
        ],
        "operationId": "resize_exists",
        "parameters": [
          {
            "type": "string",
            "name": "token",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "description": "Param of file resize.",
            "name": "resize",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "resize result",
            "schema": {
              "$ref": "#/definitions/Resize"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/files": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "v2files",
        "parameters": [
          {
            "type": "string",
            "description": "User's token",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "file list",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/resize": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "v2resize",
        "parameters": [
          {
            "type": "string",
            "name": "token",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "description": "Param of file resize.",
            "name": "resize",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "resize result. execution id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/result": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "result",
        "parameters": [
          {
            "type": "string",
            "description": "User's token",
            "name": "token",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Uexecution id",
            "name": "execution",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "file resize result",
            "schema": {
              "$ref": "#/definitions/Resize"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/upload": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "upload",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "upfile",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "User's token",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "upload result",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "description": "Error",
      "type": "object",
      "properties": {
        "attributes": {
          "description": "values for error code placeholders",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "code": {
          "description": "error code",
          "type": "string"
        },
        "detail": {
          "description": "a human-readable explanation specific to this occurrence of the problem.",
          "type": "string",
          "example": "Value of ID must be an integer"
        }
      }
    },
    "Resize": {
      "description": "Error",
      "type": "object",
      "properties": {
        "original": {
          "type": "string"
        },
        "resized": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "swagger": "2.0",
  "info": {
    "title": "apimediaservice",
    "version": "1.0.0"
  },
  "paths": {
    "/token": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "token",
        "responses": {
          "200": {
            "description": "get token",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/files": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "files",
        "parameters": [
          {
            "type": "string",
            "description": "User's token",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "file list",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/resize": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "resize",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "upfile",
            "in": "formData"
          },
          {
            "type": "integer",
            "description": "Param of file resize.",
            "name": "resize",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "User's token",
            "name": "token",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "resize result",
            "schema": {
              "$ref": "#/definitions/Resize"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/resize_exists": {
      "post": {
        "produces": [
          "application/json"
        ],
        "operationId": "resize_exists",
        "parameters": [
          {
            "type": "string",
            "name": "token",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "description": "Param of file resize.",
            "name": "resize",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "resize result",
            "schema": {
              "$ref": "#/definitions/Resize"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/files": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "v2files",
        "parameters": [
          {
            "type": "string",
            "description": "User's token",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "file list",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/resize": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "v2resize",
        "parameters": [
          {
            "type": "string",
            "name": "token",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "description": "Param of file resize.",
            "name": "resize",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "resize result. execution id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/result": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "result",
        "parameters": [
          {
            "type": "string",
            "description": "User's token",
            "name": "token",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Uexecution id",
            "name": "execution",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "file resize result",
            "schema": {
              "$ref": "#/definitions/Resize"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v2/upload": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "upload",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "upfile",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "User's token",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "upload result",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Fatal",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "description": "Error",
      "type": "object",
      "properties": {
        "attributes": {
          "description": "values for error code placeholders",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "code": {
          "description": "error code",
          "type": "string"
        },
        "detail": {
          "description": "a human-readable explanation specific to this occurrence of the problem.",
          "type": "string",
          "example": "Value of ID must be an integer"
        }
      }
    },
    "Resize": {
      "description": "Error",
      "type": "object",
      "properties": {
        "original": {
          "type": "string"
        },
        "resized": {
          "type": "string"
        }
      }
    }
  }
}`))
}
